<?xml version="1.0" encoding="UTF-8"?>
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../TestConfig/playlist.xsd">
	
	<test>
		<testCaseName>ClassLoadingTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=ClassloadingLoadTest; \
	$(TEST_STATUS)</command> 
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	
	<!-- Excluding the following test for OpenJDK10 and 11 builds. See AdoptOpenJDK/openjdk-systemtest/issues/87 for details -->
	<test>
		<testCaseName>ConcurrentLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=ConcurrentLoadTest; \
	$(TEST_STATUS)</command> 
		<tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	
	<!-- Temporarily exclude from Linux aarch64 for: https://github.com/eclipse/openj9/issues/3065 -->
	<test>
		<testCaseName>DirectByteBufferLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=DirectByteBufferLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<platformRequirements>^arch.arm</platformRequirements>
	</test>
	
	<test>
		<testCaseName>LangLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=LangLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	
	<!-- Temporarily exclude from aarch64 linux for: https://github.com/eclipse/openj9/issues/3066 -->
	<test>
		<testCaseName>LockingLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=LockingLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<platformRequirements>^arch.arm</platformRequirements>
	</test>
	
	<!-- Exclude from JDK11 due to : https://github.com/AdoptOpenJDK/openjdk-systemtest/issues/178 -->
	<test>
		<testCaseName>MathLoadTest_all</testCaseName>
		<variations>
			<variation>NoOptions</variation> 
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=MathLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>MathLoadTest_autosimd</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test-args=$(Q)workload=autoSimd$(Q) \
	-test=MathLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	
	<!-- Exclude from JDK11 due to : https://github.com/AdoptOpenJDK/openjdk-systemtest/issues/178 -->
	<test>
		<testCaseName>MathLoadTest_bigdecimal</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=MathLoadTest \
	-test-args=$(Q)workload=bigDecimal$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>MauveSingleThreadLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=MauveSingleThreadLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<disabled>AdoptOpenJDK/openjdk-systemtest/issues/75</disabled>
	</test>
	
	<test>
		<testCaseName>MauveSingleInvocationLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=MauveSingleInvocationLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<disabled>AdoptOpenJDK/openjdk-systemtest/issues/78</disabled>
	</test>
	
	<test>
		<testCaseName>MauveMultiThreadLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=MauveMultiThreadLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<disabled>AdoptOpenJDK/openjdk-systemtest/issues/64</disabled>
	</test>
	
	<!-- Temporarily exclude from Linux aarch64 for: https://github.com/eclipse/openj9/issues/3065 -->
	<test>
		<testCaseName>NioLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=NioLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<platformRequirements>^arch.arm</platformRequirements>
	</test>
	
	<test>
		<testCaseName>UtilLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=UtilLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	
	<!-- Exclude LambdaLoad test on Linux x64 non-compressedrefs sdks for OpenJ9 builds only,
		Reason: https://github.com/eclipse/openj9/issues/2209)-->
	<test>
		<testCaseName>LambdaLoadTest_Hotspot</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>LambdaLoadTest_OpenJ9_NonLinux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements> 
	</test>
	
	<test>
		<testCaseName>LambdaLoadTest_OpenJ9_Linux_CompressedRefs</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,vm.cmprssptrs</platformRequirements> 
	</test>
	
	<test>
		<testCaseName>HCRLateAttachWorkload</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=HCRLateAttachWorkload; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
			<groups>
			<group>system</group>
		</groups>
		<disabled>AdoptOpenJDK/openjdk-systemtest/issues/7</disabled>
	</test>
	
	<test>
		<testCaseName>JdiTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=JdiTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<disabled>AdoptOpenJDK/openjdk-systemtest/issues/63</disabled>
	</test>
	
	<!--  The following tests are specific to openj9 only -->
	<test>
		<testCaseName>DaaLoadTest_daa1</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test-args=$(Q)workload=daa1$(Q) \
	-test=DaaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>DaaLoadTest_daa2</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test-args=$(Q)workload=daa2$(Q) \
	-test=DaaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>DaaLoadTest_daa3</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test-args=$(Q)workload=daa3$(Q) \
	-test=DaaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>DaaLoadTest_all</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=DaaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>HeapHogLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS) -Xdisableexcessivegc$(Q) \
	-results-root=$(REPORTDIR) \
	-test=HeapHogLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>ObjectTreeLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS) -Xnoclassgc$(Q) \
	-results-root=$(REPORTDIR) \
	-test=ObjectTreeLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClassesAPI</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClassesAPI; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClassesWorkload</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClassesWorkload; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClassesWorkloadTest_Softmx_Increase</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClassesWorkloadTest_Softmx_Increase; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClassesWorkloadTest_Softmx_IncreaseDecrease</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClassesWorkloadTest_Softmx_IncreaseDecrease; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<!-- Exclude the following test on Linux ppc64le & s390x. Reason: AdoptOpenJDK/openjdk-systemtest/issues/79 -->
	<test>
		<testCaseName>SharedClassesWorkloadTest_Softmx_Increase_JitAot</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClassesWorkloadTest_Softmx_Increase_JitAot; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	
	<test>
		<testCaseName>SharedClassesWorkloadTest_Softmx_Increase_JitAot_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClassesWorkloadTest_Softmx_Increase_JitAot; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc,^arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>SharedClasses.SCM01.SingleCL</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClasses \
	-test-args=$(Q)sharedClassMode=SCM01,sharedClassTest=SingleCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClasses.SCM01.MultiCL</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClasses \
	-test-args=$(Q)sharedClassMode=SCM01,sharedClassTest=MultiCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClasses.SCM01.MultiThread</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClasses \
	-test-args=$(Q)sharedClassMode=SCM01,sharedClassTest=MultiThread$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClasses.SCM01.MultiThreadMultiCL</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClasses \
	-test-args=$(Q)sharedClassMode=SCM01,sharedClassTest=MultiThreadMultiCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClasses.SCM23.SingleCL</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClasses \
	-test-args=$(Q)sharedClassMode=SCM23,sharedClassTest=SingleCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClasses.SCM23.MultiCL</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClasses \
	-test-args=$(Q)sharedClassMode=SCM23,sharedClassTest=MultiCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClasses.SCM23.MultiThread</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClasses \
	-test-args=$(Q)sharedClassMode=SCM23,sharedClassTest=MultiThread$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<test>
		<testCaseName>SharedClasses.SCM23.MultiThreadMultiCL</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=SharedClasses \
	-test-args=$(Q)sharedClassMode=SCM23,sharedClassTest=MultiThreadMultiCL$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<!-- Excluding the following test for Hotspot & OpenJDK10-OpenJ9 and JDK11 for eclipse/openj9/issues/1566  -->
	<test>
		<testCaseName>TestJlmLocal</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmLocal; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<!-- Excluding the following test for openj9 for eclipse/openj9/issues/1520  -->
	<test>
		<testCaseName>TestJlmRemoteClassAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteClassAuth; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
		</impls>
	</test>
	
	<!--Exclude TestJlmRemoteClassNoAuth from running on openjdk8-openj9 on ppc64le Linux. Reason: AdoptOpenJDK/openjdk-systemtest/issues/145-->
	<test>
		<testCaseName>TestJlmRemoteClassNoAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteClassNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
			<subset>SE110</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestJlmRemoteClassNoAuth_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteClassNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements> 
	</test>
	<test>
		<testCaseName>TestJlmRemoteClassNoAuth_SE80_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteClassNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc</platformRequirements>
	</test>
	
	<!--Exclude TestJlmRemoteMemoryAuth from running on openjdk8-openj9 on ppc64le Linux. Reason: AdoptOpenJDK/openjdk-systemtest/issues/145-->
	<test>
		<testCaseName>TestJlmRemoteMemoryAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteMemoryAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
			<subset>SE110</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>TestJlmRemoteMemoryAuth_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteMemoryAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>TestJlmRemoteMemoryAuth_SE80_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteMemoryAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc</platformRequirements>
	</test>

	<!--Exclude TestJlmRemoteMemoryNoAuth from running on openjdk8-openj9 on ppc64le Linux. Reason: AdoptOpenJDK/openjdk-systemtest/issues/145-->
	<test>
		<testCaseName>TestJlmRemoteMemoryNoAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteMemoryNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
			<subset>SE110</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>TestJlmRemoteMemoryNoAuth_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteMemoryNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>TestJlmRemoteMemoryNoAuth_SE80_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteMemoryNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc</platformRequirements>
	</test>

	<test>
		<testCaseName>TestJlmRemoteNotifierProxyAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteNotifierProxyAuth; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>hotspot</impl>
		</impls>
	</test>

	<!-- Excluding the following test for Hotspot & OpenJDK10-Openj9 and JDK11 for eclipse/openj9/issues/1566  -->
	<!--Exclude TestJlmRemoteThreadNoAuth from running on openjdk8-openj9 on ppc64le Linux. Reason: AdoptOpenJDK/openjdk-systemtest/issues/145-->
	<test>
		<testCaseName>TestJlmRemoteThreadNoAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteThreadNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>TestJlmRemoteThreadNoAuth_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteThreadNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>TestJlmRemoteThreadNoAuth_SE80_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestJlmRemoteThreadNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc</platformRequirements>
	</test>
	
	<!-- The following JLM tests are specific to OpenJDK-OpenJ9, they run tests from openj9.test.jlm project -->
	<test>
		<testCaseName>TestIBMJlmLocal</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmLocal; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	
	<!--Exclude TestIBMJlmRemoteClassAuth from running on openjdk8-openj9 on ppc64le Linux. Reason: AdoptOpenJDK/openjdk-systemtest/issues/145-->
	<test>
		<testCaseName>TestIBMJlmRemoteClassAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteClassAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
			<subset>SE110</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>TestIBMJlmRemoteClassAuth_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteClassAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>TestIBMJlmRemoteClassAuth_SE80_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteClassAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc</platformRequirements>
	</test>
	
	<!--Exclude TestIBMJlmRemoteClassNoAuth from running on openjdk8-openj9 on ppc64le Linux. Reason: AdoptOpenJDK/openjdk-systemtest/issues/145-->
	<test>
		<testCaseName>TestIBMJlmRemoteClassNoAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteClassNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
			<subset>SE110</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>TestIBMJlmRemoteClassNoAuth_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteClassNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>TestIBMJlmRemoteClassNoAuth_SE80_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteClassNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc</platformRequirements>
	</test>
	
	<!--Exclude TestIBMJlmRemoteMemoryAuth from running on openjdk8-openj9 on ppc64le Linux. Reason: AdoptOpenJDK/openjdk-systemtest/issues/145-->
	<test>
		<testCaseName>TestIBMJlmRemoteMemoryAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteMemoryAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
			<subset>SE110</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>TestIBMJlmRemoteMemoryAuth_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteMemoryAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>TestIBMJlmRemoteMemoryAuth_SE80_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteMemoryAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc</platformRequirements>
	</test>
	
	<!--Exclude TestIBMJlmRemoteMemoryNoAuth from running on openjdk8-openj9 on ppc64le Linux. Reason: AdoptOpenJDK/openjdk-systemtest/issues/145-->
	<test>
		<testCaseName>TestIBMJlmRemoteMemoryNoAuth</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteMemoryNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
			<subset>SE110</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>TestIBMJlmRemoteMemoryNoAuth_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteMemoryNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>^os.linux</platformRequirements>
	</test>
	<test>
		<testCaseName>TestIBMJlmRemoteMemoryNoAuth_SE80_Linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=TestIBMJlmRemoteMemoryNoAuth; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE80</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>os.linux,^arch.ppc</platformRequirements>
	</test>
	
	<!-- Tests below pertain to Java 9 Modularity -->
	<!-- All modularity tests will not be included for testing JDK11 due to https://github.com/AdoptOpenJDK/openjdk-systemtest/issues/150 -->
	<test>
		<testCaseName>CpMpTest_CpMp</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CpMpTest \
	-test-args=$(Q)variant=CpMp$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CpMpTest_MP</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CpMpTest \
	-test-args=$(Q)variant=Mp$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CpMpTest2</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CpMpTest2; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CpMpTest3</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CpMpTest3; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CpMpModularJarTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CpMpModularJarTest; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CpMpModularJarTest2</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CpMpModularJarTest2; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CpMpModularJarTest3</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CpMpModularJarTest3; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>JDKInternalAPIsTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=JDKInternalAPIsTest; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>AutomaticModulesTest1</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=AutomaticModulesTest \
	-test-args=$(Q)variant=AutomaticModulesTest1$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>AutomaticModulesTest2</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=AutomaticModulesTest \
	-test-args=$(Q)variant=AutomaticModulesTest2$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>AutomaticModulesTest_ImpliedReadabilityTest1</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=AutomaticModulesTest \
	-test-args=$(Q)variant=ImpliedReadabilityTest1$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>AutomaticModulesTest_ImpliedReadabilityTest2</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=AutomaticModulesTest \
	-test-args=$(Q)variant=ImpliedReadabilityTest2$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>AutomaticModulesTest_ImpliedReadabilityTest3</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=AutomaticModulesTest \
	-test-args=$(Q)variant=ImpliedReadabilityTest3$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	
	<!-- Exclude this test from JDK10 due to : https://github.com/AdoptOpenJDK/openjdk-systemtest/issues/176 -->
	<test>
		<testCaseName>ExplicitModulesTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=ExplicitModulesTest; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>JDKInternalAPIsTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=JDKInternalAPIsTest; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>ServiceLoadersTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=ServiceLoadersTest; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>PatchModuleTest_PlatformModPatchModule</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=PatchModuleTest \
	-test-args=$(Q)variant=PlatformModPatchModule$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>PatchModuleTest_AppModPatchModule</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=PatchModuleTest \
	-test-args=$(Q)variant=AppModPatchModule$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>PatchModuleTest_UnexportedTypePatchModule</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=PatchModuleTest \
	-test-args=$(Q)variant=UnexportedTypePatchModule$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>PatchModuleTest_AdvancedPatchModule</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=PatchModuleTest \
	-test-args=$(Q)variant=AdvancedPatchModule$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>PatchModuleImageTest_PlatformModPatchModule</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=PatchModuleImageTest \
	-test-args=$(Q)variant=PlatformModPatchModule$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>PatchModuleImageTest_AppModPatchModule</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=PatchModuleImageTest \
	-test-args=$(Q)variant=AppModPatchModule$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>PatchModuleImageTest_UnexportedTypePatchModule</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=PatchModuleImageTest \
	-test-args=$(Q)variant=UnexportedTypePatchModule$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>PatchModuleImageTest_AdvancedPatchModule</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=PatchModuleImageTest \
	-test-args=$(Q)variant=AdvancedPatchModule$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>UpgradeModPathTest_ExpDirModUpgrade</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=UpgradeModPathTest \
	-test-args=$(Q)variant=ExpDirModUpgrade$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>UpgradeModPathTest_ExpDirModUpgradeCRImage</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=UpgradeModPathTest \
	-test-args=$(Q)variant=ExpDirModUpgradeCRImage$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>UpgradeModPathTest_JarredModUpgrade</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=UpgradeModPathTest \
	-test-args=$(Q)variant=JarredModUpgrade$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>UpgradeModPathTest_JarredModUpgradeCRImage</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=UpgradeModPathTest \
	-test-args=$(Q)variant=JarredModUpgradeCRImage$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>	
	<test>
		<testCaseName>JlinkTest_RequiredMod</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=JlinkTest \
	-test-args=$(Q)variant=RequiredMod$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>JlinkTest_AddModLimitMod</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=JlinkTest \
	-test-args=$(Q)variant=AddModLimitMod$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CpMpJlinkTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CpMpJlinkTest; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>JlinkPluginOptionsTest_GeneralOptionsTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=JlinkPluginOptionsTest  \
	-test-args=$(Q)variant=GeneralOptionsTest$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>LayersTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS) -Xalwaysclassgc$(Q) \
	-results-root=$(REPORTDIR) \
	-test=LayersTest \
	-test-args=$(Q)heapsize=10m$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
		<test>
		<testCaseName>CLTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CLTest \
	-test-args=$(Q)variant=CLTest$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CLTestImage</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CLTestImage \
	-test-args=$(Q)variant=CLTest$(Q); \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CLLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CLLoadTest; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CLStressWithLayers</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CLStressWithLayers; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>CLStressWithLayersCRI</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=CLStressWithLayersCRI; \
	$(TEST_STATUS)</command> 
		<subsets>
			<subset>SE90</subset>
			<subset>SE100</subset>
		</subsets>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<!-- Tests above pertain to Java 9 Modularity -->
	
	<!-- The tests below are added to test concurrent scavenge on z/OS and z/Linux using OpenJ9 SDK -->	
	<test>
		<testCaseName>ClassLoadingTest_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=ClassloadingLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>LambdaLoadTest_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=LambdaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>MathLoadTest_all_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=MathLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>MathLoadTest_autosimd_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test-args=$(Q)workload=autoSimd$(Q) \
	-test=MathLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>MathLoadTest_bigdecimal_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=MathLoadTest \
	-test-args=$(Q)workload=bigDecimal$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	<test>
		<testCaseName>DaaLoadTest_daa1_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test-args=$(Q)workload=daa1$(Q) \
	-test=DaaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>DaaLoadTest_daa2_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test-args=$(Q)workload=daa2$(Q) \
	-test=DaaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>DaaLoadTest_daa3_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test-args=$(Q)workload=daa3$(Q) \
	-test=DaaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>DaaLoadTest_all_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D) && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest;$(TEST_RESROOT)$(D)openj9-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q) \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR) \
	-test=DaaLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
	</test>
	
	<test>
		<testCaseName>MauveSingleThreadLoadTest_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=MauveSingleThreadLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
		<disabled>AdoptOpenJDK/openjdk-systemtest/issues/75</disabled>
	</test>
	
	<test>
		<testCaseName>MauveSingleInvocationLoadTest_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=MauveSingleInvocationLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
		<disabled>AdoptOpenJDK/openjdk-systemtest/issues/78</disabled>
	</test>
	
	<test>
		<testCaseName>MauveMultiThreadLoadTest_ConcurrentScavenge</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon -Xgc:concurrentScavenge</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-java-args=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=MauveMultiThreadLoadTest; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<platformRequirements>arch.390</platformRequirements>
		<disabled>AdoptOpenJDK/openjdk-systemtest/issues/64</disabled>
	</test>
	<!-- The above tests are to be run using concurrentScavenge on z/OS and z/Linux using OpenJ9 SDK -->
</playlist>
